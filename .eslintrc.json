{
    "env": {
        "browser": true,
        "es6": true,
        "jest": true,
        "node": true
    },
    "extends": [
        "airbnb",
        "airbnb-typescript",
        "airbnb/hooks",
        "plugin:@typescript-eslint/recommended",
        "plugin:jest/recommended",
        "plugin:jest-formatting/recommended"
    ],
    "parserOptions": {
        "project": "./tsconfig.json"
    },
    "plugins": [
        "react",
        "babel",
        "react-hooks",
        "jest",
        "jest-formatting",
        "import",
        "simple-import-sort"
    ],
    "rules": {
        "babel/semi": "warn",
        "import/no-cycle": "warn",
        "import/order": "off",
        "import/prefer-default-export": "warn",
        "jest/consistent-test-it": [
            "error",
            {
                "fn": "test"
            }
        ],
        "max-len": [
            "off",
            {
                "code": 100,
                "ignoreStrings": true,
                "ignoreUrls": true
            }
        ],
        "no-console": [
            "error",
            {
                "allow": [
                    "warn",
                    "error"
                ]
            }
        ],
        "no-continue": "warn",
        "no-param-reassign": "warn",
        "no-plusplus": [
            "error",
            {
                "allowForLoopAfterthoughts": true
            }
        ],
        "no-underscore-dangle": "off",
        "padding-line-between-statements": [
            "error",
            {
                "blankLine": "always",
                "next": "block-like",
                "prev": "*"
            },
            {
                "blankLine": "any",
                "next": "if",
                "prev": "if"
            }
        ],
        "prefer-destructuring": "warn",
        "prefer-promise-reject-errors": "off",
        "react-hooks/exhaustive-deps": "warn",
        "react-hooks/rules-of-hooks": "error",
        "react/destructuring-assignment": "warn",
        "react/forbid-prop-types": [
            "warn",
            {
                "checkChildContextTypes": false,
                "checkContextTypes": false,
                "forbid": []
            }
        ],
        "react/jsx-sort-props": [
            "error",
            {
                "callbacksLast": false,
                "shorthandFirst": false,
                "shorthandLast": false,
                "ignoreCase": true,
                "noSortAlphabetically": false,
                "reservedFirst": [
                    "key"
                ]
            }
        ],
        "react/sort-prop-types": [
            "error",
            {
                "callbacksLast": false,
                "ignoreCase": false,
                "requiredFirst": true,
                "sortShapeProp": false,
                "noSortAlphabetically": false
            }
        ],
        "react/jsx-one-expression-per-line": "off",
        "react/no-did-update-set-state": "warn",
        "react/sort-comp": "warn",
        "react/jsx-props-no-spreading": "off",
        "sort-imports": "off",
        "simple-import-sort/exports": "error",
        "simple-import-sort/imports": "error",
        // all rules below are temporarily disabled in order for eslint to pass
        // after updating. these should be fixed and re-enabled
        "react/function-component-definition": "off",
        "react/jsx-curly-newline": "off",
        "react/jsx-no-constructed-context-values": "off",
        "react/jsx-no-useless-fragment": "off",
        "jest/no-conditional-expect": "off",
        "max-classes-per-file": "off",
        "no-mixed-operators": "off",
        "react/prop-types": "off",
        "react/no-unstable-nested-components": "off",
        "prefer-object-spread": "off",
        "function-paren-newline": "off",
        "jest/valid-title": "off",
        "function-call-argument-newline": "off",
        "react/static-property-placement": "off",
        "no-unused-vars": "off",
        "@typescript-eslint/no-shadow": "off",
        "@typescript-eslint/default-param-last": "off",
        "@typescript-eslint/no-use-before-define": "off"
    },
    "settings": {
        "import/resolver": {
            "webpack": {
                "config": "config/webpack/common.js"
            }
        }
    }
}
